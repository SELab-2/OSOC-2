{
  "swagger": "2.0",
  "info": {
    "description": "An overview of API endpoints, verbs and their uses. Note: this is still in-progress and will change over time.",
    "version": "2.0.0",
    "title": "OSOC - API"
  },
  "tags": [
    {
      "name": "admin",
      "description": "Everything about admins."
    },
    {
      "name": "coach",
      "description": "Everything about coaches."
    },
    {
      "name": "followup",
      "description": "Everything about followups."
    },
    {
      "name": "form",
      "description": "Everything about the form."
    },
    {
      "name": "github",
      "description": "Everything about the login with github."
    },
    {
      "name": "login",
      "description": "Everything about the login."
    },
    {
      "name": "project",
      "description": "Everything about projects."
    },
    {
      "name": "reset",
      "description": "Everything about resetting a password."
    },
    {
      "name": "role",
      "description": "Everything about roles."
    },
    {
      "name": "student",
      "description": "Everything about students."
    },
    {
      "name": "template",
      "description": "Everything about sending emails."
    },
    {
      "name": "user",
      "description": "Everything about users."
    },
    {
      "name": "verify",
      "description": "Everything about verifying the session keys."
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/admin/all": {
      "get": {
        "tags": [
          "admin"
        ],
        "description": "Lists all the admins.",
        "operationId": "all_admins",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllLoginUsers"
            }
          }
        }
      }
    },
    "/admin/<admin-id>": {
      "post": {
        "tags": [
          "admin"
        ],
        "description": "Updates the admin in the system.",
        "operationId": "update_admin",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the user.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "isCoach",
            "description": "True if the user is a coach, else False.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "isAdmin",
            "description": "True if the user is an admin, else False.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "accountStatus",
            "description": "Shows the status of the account.",
            "required": false,
            "type": "string",
            "enum": [
              "ACTIVATED",
              "PENDING",
              "DISABLED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "If the session key is invalid or the id is not an id of an admin, an error is thrown. Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/ModifyLoginUser"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "description": "Removes the given admin from the system.",
        "operationId": "admin_id_delete",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the user.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/coach/all": {
      "get": {
        "tags": [
          "coach"
        ],
        "description": "Lists all the coaches in the system.",
        "operationId": "all_coaches",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllLoginUsers"
            }
          }
        }
      }
    },
    "/coach/<coach-id>": {
      "post": {
        "tags": [
          "coach"
        ],
        "description": "Updates the coach in the system.",
        "operationId": "update_coach",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the user.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "isCoach",
            "description": "True if the user is a coach, else False.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "isAdmin",
            "description": "True if the user is an admin, else False.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "accountStatus",
            "description": "Shows the status of the account.",
            "required": false,
            "type": "string",
            "enum": [
              "ACTIVATED",
              "PENDING",
              "DISABLED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "If the session key is invalid or the id is not an id of a coach, an error is thrown. Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/ModifyLoginUser"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "description": "Removes the given coach from the system.",
        "operationId": "coach_id_delete",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the user.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/coach/request": {
      "get": {
        "tags": [
          "coach"
        ],
        "description": "Lists all coach requests.",
        "operationId": "all_coach_requests",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllCoachRequests"
            }
          }
        }
      }
    },
    "/followup/all": {
      "get": {
        "tags": [
          "followup"
        ],
        "description": "Lists all the followups in the system.",
        "operationId": "all_followups",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllFollowups"
            }
          }
        }
      }
    },
    "/followup/<followup-id>": {
      "get": {
        "tags": [
          "followup"
        ],
        "description": "Lists all details about the followup with the given id.",
        "operationId": "followup_id_get",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the followup.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Followup_Id"
            }
          }
        }
      },
      "post": {
        "tags": [
          "followup"
        ],
        "description": "Attempts to update a followup with the given id and type.",
        "operationId": "followup_id_post",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the followup.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "type",
            "description": "The email status.",
            "required": true,
            "type": "string",
            "enum": [
              "SCHEDULED",
              "SENT",
              "FAILED",
              "NONE",
              "DRAFT"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Followup_Id"
            }
          }
        }
      }
    },
    "/form": {
      "post": {
        "tags": [
          "form"
        ],
        "description": "Attempts to create a new form in the database.",
        "operationId": "create_form",
        "parameters": [
          {
            "in": "header",
            "name": "eventId",
            "description": "The event id.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "createdAt",
            "description": "The date when this form was created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "data",
            "description": "The data of the form.",
            "required": true,
            "type": "string",
            "default": "This is actually an object with the data."
          }
        ],
        "responses": {
          "200": {
            "description": "The response is an empty object.",
            "schema": {
              "$ref": "#/definitions/Form"
            }
          }
        }
      }
    },
    "/github": {
      "get": {
        "tags": [
          "github"
        ],
        "description": "Redirects towards another github url.",
        "operationId": "github",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 towards another url"
          }
        }
      }
    },
    "/github/challenge": {
      "get": {
        "tags": [
          "github"
        ],
        "description": "Attempts to get a github exchange access token.",
        "operationId": "github_challenge",
        "parameters": [
          {
            "in": "header",
            "name": "code",
            "description": "The code for the post request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "state",
            "description": "The state.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The response is empty."
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "description": "Attempts to log a user in into the system",
        "operationId": "login",
        "parameters": [
          {
            "in": "header",
            "name": "password",
            "description": "The hashed password of the user to log in.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "email",
            "description": "The email of the user to log in.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "login"
        ],
        "description": "Attempts to log out.",
        "operationId": "logout",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "The session key of the user to log out.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out."
          }
        }
      }
    },
    "/project": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Redirects towards GET /project/all.",
        "operationId": "project",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /project/all"
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Attempts to insert a new project into the system.",
        "operationId": "create_project",
        "parameters": [
          {
            "in": "header",
            "name": "name",
            "description": "The name of the project.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "partner",
            "description": "The partner's name of this project.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "start_date",
            "description": "The start date of this project.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end_date",
            "description": "The end date of this project.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "osocId",
            "description": "The id of the osoc .",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "positions",
            "description": "The amount of positions for the project.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/CreateProject"
            }
          }
        }
      }
    },
    "/project/all": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Lists all projects in the system.",
        "operationId": "all_projects",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/All_projects"
            }
          }
        }
      }
    },
    "/project/<project-id>": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Get the selected project from the system.",
        "operationId": "get_project_id",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "project_id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Project_Students_Coaches"
            }
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Updates the project in the system.",
        "operationId": "update_project",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "name",
            "description": "The name of the project.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "partner",
            "description": "The partner's name of this project.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "start",
            "description": "The start date of this project.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end",
            "description": "The end date of this project.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "positions",
            "description": "The amount of positions for the project.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Modify_project"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "project"
        ],
        "description": "Removes the given project from the system.",
        "operationId": "project_id_delete",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/project/<project-id>/draft": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Lists all drafted students of the selected project.",
        "operationId": "all_students_project",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Drafted_students_project"
            }
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Add the student to the selected project.",
        "operationId": "add_student_to_project",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "studentId",
            "description": "The id of the selected student.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "role",
            "description": "The selected role for this student.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Draft_student_project"
            }
          }
        }
      }
    },
    "/project/<project-id>/assignee": {
      "delete": {
        "tags": [
          "project"
        ],
        "description": "Removes the student from the project.",
        "operationId": "project_student_delete",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the project.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "student",
            "description": "The id of the student.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/project/conflicts": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Lists all project conflicts.",
        "operationId": "project_conflicts",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Project_conflicts"
            }
          }
        }
      }
    },
    "/reset": {
      "post": {
        "tags": [
          "reset"
        ],
        "description": "Handles a password reset request.",
        "operationId": "reset_request",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "description": "The email address.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The response is empty."
          }
        }
      }
    },
    "/reset/<reset-id>": {
      "get": {
        "tags": [
          "reset"
        ],
        "description": "Checks if a reset code is valid.",
        "operationId": "reset_check_code",
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "The code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The response is empty."
          }
        }
      },
      "post": {
        "tags": [
          "reset"
        ],
        "description": "Resets the password when the code and password are valid.",
        "operationId": "password_reset",
        "parameters": [
          {
            "in": "header",
            "name": "id",
            "description": "The code.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "password",
            "description": "The new password.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "Redirects towards GET /role/all.",
        "operationId": "role",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /role/all"
          }
        }
      }
    },
    "/role/all": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "Lists all roles in the system.",
        "operationId": "all_roles",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/All_roles"
            }
          }
        }
      }
    },
    "/role/create": {
      "post": {
        "tags": [
          "role"
        ],
        "description": "Create a role in the system.",
        "operationId": "create_role",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "name",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Create_role"
            }
          }
        }
      }
    },
    "/student": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Redirects towards GET /student/all.",
        "operationId": "student",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /student/all"
          }
        }
      }
    },
    "/student/all": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Lists all students in the system.",
        "operationId": "all_students",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllStudents"
            }
          }
        }
      }
    },
    "/student/<student-id>": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Lists all details about the student with the given id.",
        "operationId": "student_id_get",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id from the student.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "student"
        ],
        "description": "Removes the given student from the system.",
        "operationId": "student_id_delete",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the student.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/student/<student-id>/suggest": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Lists all suggestions for a certain student.",
        "operationId": "get_student_suggestions",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the student.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "year",
            "description": "The osoc year.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllStudentSuggestions"
            }
          }
        }
      },
      "post": {
        "tags": [
          "student"
        ],
        "description": "A login user suggests if the student is suitable for OSOC.",
        "operationId": "suggest_student",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the student.",
            "required": true,
            "type": "number"
          },
          {
            "in": "header",
            "name": "suggestion",
            "description": "The suggestion for the student.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "reason",
            "description": "The motivation for the suggestion.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "senderId",
            "description": "The id of the login user.",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/student/<student-id>/confirm": {
      "post": {
        "tags": [
          "student"
        ],
        "description": "Admin gives out final yes/maybe/no that decides if the student is suitable for OSOC or not.",
        "operationId": "confirm_student",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "reply",
            "description": "The suggestion for the student.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "reason",
            "description": "The reason for the suggestion.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "description": "The id of the student.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Sessionkey"
            }
          }
        }
      }
    },
    "/student/filter": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Filters the students with one or more filters.",
        "operationId": "filter_students",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "firstNameFilter",
            "description": "The firstname filter.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "lastNameFilter",
            "description": "The lastname filter.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "emailFilter",
            "description": "The email filter.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "roleFilter",
            "description": "The role filter.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "alumniFilter",
            "description": "The alumni filter.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "coachFilter",
            "description": "The student-coach filter.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "statusFilter",
            "description": "The status filter.",
            "required": false,
            "type": "string",
            "enum": [
              "YES",
              "MAYBE",
              "NO"
            ]
          },
          {
            "in": "header",
            "name": "firstNameSort",
            "description": "Sorting by firstname (asc or desc).",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "lastNameSort",
            "description": "Sorting by lastname (asc or desc).",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "emailSort",
            "description": "Sorting by email (asc or desc).",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "roleSort",
            "description": "Sorting by role (asc or desc).",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "alumniSort",
            "description": "Sorting by alumni (asc or desc).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/AllStudents"
            }
          }
        }
      }
    },
    "/verify": {
      "get": {
        "tags": [
          "verify"
        ],
        "description": "Attempts to verify if the session key is valid.",
        "operationId": "verify",
        "parameters": [
          {
            "in": "header",
            "name": "sessionkey",
            "description": "Your current session key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated sessionkey as hex string E.g. \"A1BEF4\".",
            "schema": {
              "$ref": "#/definitions/Verify"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Sessionkey": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Sessionkey"
      }
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "person_data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "github": {
              "type": "string"
            }
          }
        },
        "coach": {
          "type": "boolean"
        },
        "admin": {
          "type": "boolean"
        },
        "activated": {
          "type": "string"
        }
      },
      "xml": {
        "name": "LoginUser"
      }
    },
    "AllLoginUsers": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoginUser"
          }
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AllLoginUsers"
      }
    },
    "AllCoachRequests": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "person_data": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "coach": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "activated": {
                "type": "string"
              }
            }
          }
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AllCoachRequests"
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_coach": {
          "type": "boolean"
        },
        "email_status": {
          "type": "string",
          "enum": [
            "ACTIVATED",
            "PENDING",
            "DISABLED"
          ]
        }
      },
      "xml": {
        "name": "Login"
      }
    },
    "ModifyLoginUser": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "ModifyLoginUser"
      }
    },
    "Followup": {
      "type": "object",
      "properties": {
        "student": {
          "type": "number"
        },
        "application": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "SCHEDULED",
            "SENT",
            "FAILED",
            "NONE",
            "DRAFT"
          ]
        }
      },
      "xml": {
        "name": "Followup"
      }
    },
    "FollowupsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Followup"
      },
      "xml": {
        "name": "FollowupsList"
      }
    },
    "AllFollowups": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/FollowupsList"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AllFollowups"
      }
    },
    "Followup_Id": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Followup"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Followup_Id"
      }
    },
    "Form": {
      "type": "object",
      "xml": {
        "name": "Form"
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "partner": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "positions": {
          "type": "number"
        },
        "osoc_id": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Project"
      }
    },
    "CreateProject": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateProject"
      }
    },
    "Project_coach": {
      "type": "object",
      "properties": {
        "login_user": {
          "type": "object",
          "properties": {
            "login_user_id": {
              "type": "number"
            },
            "is_coach": {
              "type": "boolean"
            },
            "is_admin": {
              "type": "boolean"
            },
            "person": {
              "$ref": "#/definitions/Person"
            }
          }
        }
      }
    },
    "Project_students": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "contract_id": {
            "type": "number"
          },
          "project_role": {
            "type": "object",
            "properties": {
              "project_id": {
                "type": "number"
              },
              "project_role_id": {
                "type": "number"
              },
              "role_id": {
                "type": "number"
              },
              "positions": {
                "type": "number"
              }
            }
          },
          "contract_status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "APPROVED",
              "CANCELLED",
              "WAIT_APPROVAL",
              "SIGNED",
              "SENT"
            ]
          },
          "student": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Student"
            }
          }
        }
      }
    },
    "Project_coaches": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Project_coach"
      }
    },
    "Project_Students_Coaches": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "partner": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "positions": {
          "type": "number"
        },
        "osoc_id": {
          "type": "number"
        },
        "students": {
          "$ref": "#/definitions/Project_students"
        },
        "coaches": {
          "$ref": "#/definitions/Project_coaches"
        }
      },
      "xml": {
        "name": "Project_Students_Coaches"
      }
    },
    "Project_list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Project_Students_Coaches"
      },
      "xml": {
        "name": "ProjectList"
      }
    },
    "All_projects": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Project_list"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Allprojects"
      }
    },
    "Modify_project": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "$ref": "#/definitions/Sessionkey"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "partner": {
              "type": "string"
            },
            "start_date": {
              "type": "string"
            },
            "end_date": {
              "type": "string"
            },
            "positions": {
              "type": "number"
            },
            "osoc_id": {
              "type": "number"
            }
          }
        }
      },
      "xml": {
        "name": "Modify_project"
      }
    },
    "Drafted_students_project": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "students": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "student": {
                    "$ref": "#/definitions/Student"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "DRAFT",
                      "APPROVED",
                      "CANCELLED",
                      "WAIT_APPROVAL",
                      "SIGNED",
                      "SENT"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "xml": {
        "name": "Drafted_students_project"
      }
    },
    "Draft_student_project": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "properties": {
            "drafted": {
              "type": "boolean"
            },
            "role": {
              "type": "string"
            }
          }
        }
      },
      "xml": {
        "name": "Draft_student_project"
      }
    },
    "Project_conflicts": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "student": {
                "type": "number"
              },
              "projects": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "xml": {
        "name": "Project_conflicts"
      }
    },
    "All_roles": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "role_id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "xml": {
        "name": "All_roles"
      }
    },
    "Create_role": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Create_role"
      }
    },
    "NameId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "NameId"
      }
    },
    "NameIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NameId"
      },
      "xml": {
        "name": "NameIdList"
      }
    },
    "CreateStudent": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/NameId"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "CreateStudent"
      }
    },
    "Student": {
      "type": "object",
      "properties": {
        "student": {
          "type": "object",
          "properties": {
            "person": {
              "$ref": "#/definitions/Person"
            },
            "person_id": {
              "type": "number"
            },
            "student_id": {
              "type": "number"
            },
            "gender": {
              "type": "string"
            },
            "pronouns": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "nickname": {
              "type": "string"
            },
            "alumni": {
              "type": "boolean"
            }
          }
        },
        "evaluations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllStudentEvaluations"
          }
        },
        "jobApplication": {
          "type": "object",
          "properties": {
            "job_application_id": {
              "type": "number"
            },
            "edus": {
              "type": "array",
              "items": {
                "type": "string",
                "default": "Informatics"
              }
            },
            "created_at": {
              "type": "string",
              "example": "This is actually a date: 2022-03-14 23:10:00+01"
            },
            "edu_duration": {
              "type": "number",
              "default": 5
            },
            "edu_institute": {
              "type": "string",
              "default": "Ghent university"
            },
            "edu_level": {
              "type": "string",
              "default": "Third bachelors degree"
            },
            "edu_year": {
              "type": "string",
              "default": 3
            },
            "email_status": {
              "type": "string",
              "enum": [
                "SCHEDULED",
                "SENT",
                "FAILED",
                "NONE",
                "DRAFT"
              ],
              "default": "NONE"
            },
            "fun_fact": {
              "type": "string",
              "default": "I like basketball."
            },
            "osoc_id": {
              "type": "number"
            },
            "responsibilities": {
              "type": "string",
              "default": "I play basketball from 5pm until 7pm."
            },
            "student_coach": {
              "type": "boolean"
            },
            "student_id": {
              "type": "number"
            },
            "student_volunteer_info": {
              "type": "string",
              "default": "Yes, I can work with a student employment agreement in Belgium."
            },
            "attachment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attachment"
              }
            },
            "job_application_skill": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobApplicationSkill"
              }
            },
            "applied_role": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppliedRole"
              }
            }
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Student"
      }
    },
    "AllStudents": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Student"
          }
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AllStudents"
      }
    },
    "AllStudentEvaluations": {
      "type": "object",
      "properties": {
        "evaluation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Evaluation"
          }
        },
        "osoc": {
          "type": "object",
          "properties": {
            "year": {
              "type": "number"
            }
          }
        }
      },
      "xml": {
        "name": "AllStudentEvaluations"
      }
    },
    "AllStudentSuggestions": {
      "type": "object",
      "properties": {
        "sessionkey": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "senderFirstname": {
                "type": "string"
              },
              "senderLastname": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "decision": {
                "type": "string",
                "enum": [
                  "YES",
                  "MAYBE",
                  "NO"
                ]
              },
              "isFinal": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "xml": {
        "name": "AllStudentSuggestions"
      }
    },
    "Evaluation": {
      "type": "object",
      "properties": {
        "evaluation_id": {
          "type": "number"
        },
        "decision": {
          "type": "string",
          "enum": [
            "YES",
            "MAYBE",
            "NO"
          ]
        },
        "motivation": {
          "type": "string"
        },
        "is_final": {
          "type": "boolean"
        },
        "login_user": {
          "type": "object",
          "properties": {
            "login_user_id": {
              "type": "number"
            },
            "person": {
              "type": "object",
              "properties": {
                "person_id": {
                  "type": "number"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "github": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "xml": {
        "name": "Evaluation"
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "person_id": {
          "type": "number"
        },
        "email": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "github": {
          "type": "string"
        },
        "github_id": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Person"
      }
    },
    "Attachment": {
      "type": "object",
      "properties": {
        "job_application_id": {
          "type": "number"
        },
        "attachment_id": {
          "type": "number"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CV_URL",
              "PORTFOLIO_URL",
              "FILE_URL",
              "MOTIVATION_STRING",
              "MOTIVATION_URL"
            ]
          }
        }
      },
      "xml": {
        "name": "Attachment"
      }
    },
    "JobApplicationSkill": {
      "type": "object",
      "properties": {
        "job_application_id": {
          "type": "number"
        },
        "job_application_skill_id": {
          "type": "number"
        },
        "skill": {
          "type": "string"
        },
        "is_best": {
          "type": "boolean"
        },
        "language_id": {
          "type": "number"
        },
        "is_preferred": {
          "type": "boolean"
        },
        "level": {
          "type": "number"
        }
      },
      "xml": {
        "name": "JobApplicationSkill"
      }
    },
    "AppliedRole": {
      "type": "object",
      "properties": {
        "job_application_id": {
          "type": "number"
        },
        "applied_role_id": {
          "type": "number"
        },
        "role_id": {
          "type": "number"
        }
      },
      "xml": {
        "name": "JobApplicationSkill"
      }
    },
    "Verify": {
      "type": "object",
      "required": [
        "valid"
      ],
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "is_coach": {
          "type": "boolean"
        },
        "is_admin": {
          "type": "boolean"
        },
        "account_status": {
          "type": "string",
          "enum": [
            "ACTIVATED",
            "PENDING",
            "DISABLED"
          ]
        }
      },
      "xml": {
        "name": "Verify"
      }
    },
    "Suggestion": {
      "type": "object",
      "properties": {
        "motivation": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        },
        "loginuserid": {
          "type": "number"
        },
        "jobapplicationid": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Suggestion"
      }
    },
    "Confirmation": {
      "type": "object",
      "properties": {
        "motivation": {
          "type": "string"
        },
        "confirmation": {
          "type": "string"
        },
        "loginuserid": {
          "type": "number"
        },
        "jobapplicationid": {
          "type": "number"
        }
      },
      "xml": {
        "name": "confirmation"
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "number"
        }
      },
      "xml": {
        "name": "role"
      }
    },
    "RoleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Role"
      },
      "xml": {
        "name": "RoleList"
      }
    },
    "AllRoles": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/RoleList"
        },
        "sessionkey": {
          "type": "string"
        }
      },
      "xml": {
        "name": "AllRoles"
      }
    }
  }
}