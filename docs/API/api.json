{
  "openapi": "3.0.1",
  "info": {
    "title": "OSOC - API",
    "description": "An overview of API endpoints.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://sel2-2.ugent.be/api-osoc"
    }
  ],
  "tags": [
    {
      "name": "admin",
      "description": "Everything about admins."
    },
    {
      "name": "coach",
      "description": "Everything about coaches."
    },
    {
      "name": "followup",
      "description": "Everything about followups."
    },
    {
      "name": "form",
      "description": "Everything about the form."
    },
    {
      "name": "github",
      "description": "Everything about the login with github."
    },
    {
      "name": "login",
      "description": "Everything about the login."
    },
    {
      "name": "osoc",
      "description": "Everything about osoc editions."
    },
    {
      "name": "project",
      "description": "Everything about projects."
    },
    {
      "name": "reset",
      "description": "Everything about resetting a password."
    },
    {
      "name": "role",
      "description": "Everything about roles."
    },
    {
      "name": "student",
      "description": "Everything about students."
    },
    {
      "name": "template",
      "description": "Everything about sending emails."
    },
    {
      "name": "user",
      "description": "Everything about users."
    },
    {
      "name": "verify",
      "description": "Everything about verifying the session keys."
    }
  ],
  "paths": {
    "/admin": {
      "get": {
        "tags": [
          "admin"
        ],
        "description": "Redirects towards GET /admin/all.",
        "operationId": "admin",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /admin/all"
          }
        }
      }
    },
    "/admin/all": {
      "get": {
        "tags": [
          "admin"
        ],
        "description": "Returns a list of all the admins in the system.",
        "operationId": "all_admins",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all admins.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoginUser"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/admin/<admin-id>": {
      "post": {
        "tags": [
          "admin"
        ],
        "description": "Attempts to update the admin in the system.",
        "operationId": "update_admin",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountStatus",
            "in": "header",
            "description": "Shows the status of the account.",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVATED",
                "DISABLED",
                "PENDING"
              ]
            }
          },
          {
            "name": "isAdmin",
            "in": "header",
            "description": "True if the user is an admin, else False.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCoach",
            "in": "header",
            "description": "True if the user is a coach, else False.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the id and name of the modified login user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyLoginUser"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "description": "Removes the given admin from the system.",
        "operationId": "admin_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified admin was removed. The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/coach": {
      "get": {
        "tags": [
          "coach"
        ],
        "description": "Redirects towards GET /coach/all.",
        "operationId": "coach",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /coach/all"
          }
        }
      }
    },
    "/coach/all": {
      "get": {
        "tags": [
          "coach"
        ],
        "description": "Returns a list of all the coaches in the system.",
        "operationId": "all_coaches",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all coaches.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CoachUser"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/coach/<coach-id>": {
      "post": {
        "tags": [
          "coach"
        ],
        "description": "Attempts to modify the coach in the system.",
        "operationId": "modify_coach",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountStatus",
            "in": "header",
            "description": "Shows the status of the account.",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVATED",
                "DISABLED",
                "PENDING"
              ]
            }
          },
          {
            "name": "isAdmin",
            "in": "header",
            "description": "True if the user is an admin, else False.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isCoach",
            "in": "header",
            "description": "True if the user is a coach, else False.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the id and name of the modified login user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyLoginUser"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "coach"
        ],
        "description": "Removes the given coach from the system.",
        "operationId": "coach_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified coach was removed. The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/followup/all": {
      "get": {
        "tags": [
          "followup"
        ],
        "description": "Returns a list of all the followups in the system.",
        "operationId": "all_followups",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all followups in the system.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Followup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/followup/<followup-id>": {
      "get": {
        "tags": [
          "followup"
        ],
        "description": "Lists all details about the followup with the given id.",
        "operationId": "followup_id_get",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the followup.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains info of the followup.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Followup"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "followup"
        ],
        "description": "Attempts to update a followup with the given id and type.",
        "operationId": "followup_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the followup.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "header",
            "description": "The email status.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "APPLIED",
                "AWAITING_PROJECT",
                "APPROVED",
                "CONTRACT_CONFIRMED",
                "CONTRACT_DECLINED",
                "REJECTED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains info of the followup.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Followup"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/form": {
      "post": {
        "tags": [
          "form"
        ],
        "description": "Attempts to create a new form in the database.",
        "operationId": "create_form",
        "parameters": [
          {
            "name": "createdAt",
            "in": "header",
            "description": "The date when this form was created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "data",
            "in": "header",
            "description": "The data of the form.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "This is actually an object with the data."
            }
          },
          {
            "name": "eventId",
            "in": "header",
            "description": "The event id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          }
        }
      }
    },
    "/github": {
      "get": {
        "tags": [
          "github"
        ],
        "description": "Attempts to authorize a user using GitHub OAuth. Upon success, redirects to our own frontend with a newly generated session key.",
        "operationId": "github",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 towards another url"
          }
        }
      }
    },
    "/github/challenge": {
      "get": {
        "tags": [
          "github"
        ],
        "description": "Should not be used from outside code. Is only used as a GitHub OAuth redirect URL.",
        "operationId": "github_challenge",
        "parameters": [
          {
            "name": "code",
            "in": "header",
            "description": "The code for the post request.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "header",
            "description": "The state.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The response is empty."
          },
          "409": {
            "description": "Something went wrong while authenticating with GitHub."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "login"
        ],
        "description": "Attempts to log a user in into the system.",
        "operationId": "login",
        "parameters": [
          {
            "name": "email",
            "in": "header",
            "description": "The email of the user to log in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "header",
            "description": "The password of the user to log in.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains info about this user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "409": {
            "description": "Invalid e-mail or password."
          }
        }
      },
      "delete": {
        "tags": [
          "login"
        ],
        "description": "Attempts to log out.",
        "operationId": "logout",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "The session key of the user to log out.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user was logged out. The response is an empty object."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/osoc": {
      "get": {
        "tags": [
          "osoc"
        ],
        "description": "Redirects towards GET /osoc/all.",
        "operationId": "osoc",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /osoc/all"
          }
        }
      }
    },
    "/osoc/all": {
      "get": {
        "tags": [
          "osoc"
        ],
        "description": "Returns a list of all osoc editions in the system.",
        "operationId": "all_osoc_editions",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all osoc editions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "osoc_id": {
                            "type": "number"
                          },
                          "year": {
                            "type": "number"
                          },
                          "_count": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/osoc/create": {
      "post": {
        "tags": [
          "osoc"
        ],
        "description": "Attempts to create a new osoc edition in the system.",
        "operationId": "create_osoc_edition",
        "parameters": [
          {
            "name": "year",
            "in": "header",
            "description": "The osoc year.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the year and osoc_id of the newly created edition.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "year": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/osoc/filter": {
      "get": {
        "tags": [
          "osoc"
        ],
        "description": "Returns a list of all filtered osoc editions in the system.",
        "operationId": "filtered_osoc_editions",
        "parameters": [
          {
            "name": "yearFilter",
            "in": "header",
            "description": "The year of the osoc edition.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "yearSort",
            "in": "header",
            "description": "Sorting by year (asc or desc).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all filtered osoc editions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "osoc_id": {
                            "type": "number"
                          },
                          "year": {
                            "type": "number"
                          },
                          "_count": {
                            "type": "object",
                            "properties": {
                              "project": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/osoc/<osoc-id>": {
      "delete": {
        "tags": [
          "osoc"
        ],
        "description": "Attempts to delete an osoc edition.",
        "operationId": "delete_osoc_edition",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "header",
            "description": "The osoc edition id.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified osoc edition was removed. The response is an empty object."
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/project": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Redirects towards GET /project/all.",
        "operationId": "project",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /project/all"
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Attempts to insert a new project into the system.",
        "operationId": "create_project",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "header",
            "description": "The end date of this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "header",
            "description": "The name of the project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "osocId",
            "in": "header",
            "description": "The id of the osoc .",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "partner",
            "in": "header",
            "description": "The partner's name of this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coaches",
            "in": "header",
            "description": "The coaches for this project.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "roles",
            "in": "header",
            "description": "The roles for the project.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "positions": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "start",
            "in": "header",
            "description": "The start date of this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "header",
            "description": "The description of this project.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains info about the newly created project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/project/all": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Returns a list of all projects in the system.",
        "operationId": "all_projects",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info of all projects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/All_projects"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/project/<project-id>": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Returns the selected project from the system.",
        "operationId": "get_project_id",
        "parameters": [
          {
            "name": "project_id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The coaches list contains info about all coaches who supervise this project. The students list contains info about all students who contribute to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project_Students_Coaches"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Attempts to modify the project in the system.",
        "operationId": "modify_project",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleteRoles",
            "in": "header",
            "description": "The id of the roles to delete.",
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          {
            "name": "end",
            "in": "header",
            "description": "The end date of this project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modifyRoles",
            "in": "header",
            "description": "The roles to modify.",
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "positions": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "name",
            "in": "header",
            "description": "The name of the project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partner",
            "in": "header",
            "description": "The partner's name of this project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positions",
            "in": "header",
            "description": "The amount of positions for the project.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "start",
            "in": "header",
            "description": "The start date of this project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addCoaches",
            "in": "header",
            "description": "The ID's of the coaches to add to this project.",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "removeCoaches",
            "in": "header",
            "description": "The ID's of the coaches to remove from this project.",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the new info.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Modify_project"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "project"
        ],
        "description": "Attempts to remove the project from the system.",
        "operationId": "project_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified project was removed. The response is an empty object."
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/project/<project-id>/draft": {
      "get": {
        "tags": [
          "project"
        ],
        "description": "Lists all drafted students of the selected project.",
        "operationId": "all_students_project",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The students list contains info about all drafted students of this project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Drafted_students_project"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "project"
        ],
        "description": "Add the student to the selected project.",
        "operationId": "add_student_to_project",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "role",
            "in": "header",
            "description": "The selected role for this student.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "studentId",
            "in": "header",
            "description": "The id of the selected student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the role of the student if the student contributes to the project.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Draft_student_project"
                }
              }
            }
          },
          "204": {
            "description": "The selected student is not assigned to this project."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "409": {
            "description": "That role doesn't exist."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/project/<project-id>/assignee": {
      "delete": {
        "tags": [
          "project"
        ],
        "description": "Removes the student from the project.",
        "operationId": "project_student_delete",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the project.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "student",
            "in": "header",
            "description": "The id of the student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified student was removed from the project. The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/reset": {
      "post": {
        "tags": [
          "reset"
        ],
        "description": "Handles a password reset request.",
        "operationId": "reset_request",
        "parameters": [
          {
            "name": "email",
            "in": "header",
            "description": "The email address.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "503": {
            "description": "Failed to send the email. If you're certain that your email address is correct, then please contact the admin."
          }
        }
      }
    },
    "/reset/<reset-id>": {
      "get": {
        "tags": [
          "reset"
        ],
        "description": "Checks if a reset code is valid.",
        "operationId": "reset_check_code",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The response is an empty object."
          },
          "400": {
            "description": "Failed to update your password. Perhaps you used an invalid key?"
          }
        }
      },
      "post": {
        "tags": [
          "reset"
        ],
        "description": "Resets the password if the code and password are valid.",
        "operationId": "password_reset",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "header",
            "description": "The new password.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new session key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionkey": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "Redirects towards GET /role/all.",
        "operationId": "role",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /role/all"
          }
        }
      }
    },
    "/role/all": {
      "get": {
        "tags": [
          "role"
        ],
        "description": "Returns a list of all roles in the system.",
        "operationId": "all_roles",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all roles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/All_roles"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/role/create": {
      "post": {
        "tags": [
          "role"
        ],
        "description": "Attempts to create a role in the system.",
        "operationId": "create_role",
        "parameters": [
          {
            "name": "name",
            "in": "header",
            "description": "The name of the role.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the name of the newly created role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create_role"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/student": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Redirects towards GET /student/all.",
        "operationId": "student",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /student/all"
          }
        }
      }
    },
    "/student/all": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Returns a list of all students in the system.",
        "operationId": "all_students",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all students.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllStudents"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/student/<student-id>": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Lists all details about the student with the given id.",
        "operationId": "student_id_get",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id from the student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains all info about this student.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "student"
        ],
        "description": "Removes the given student from the system.",
        "operationId": "student_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the student.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified student was removed. The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/student/<student-id>/suggest": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Returns a list of all suggestions about this student.",
        "operationId": "get_student_suggestions",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "header",
            "description": "The osoc year.",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all suggestions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllStudentSuggestions"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "student"
        ],
        "description": "A login user suggests if the student is suitable for OSOC.",
        "operationId": "suggest_student",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_application_id",
            "in": "header",
            "description": "The id of the student's job application.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "suggestion",
            "in": "header",
            "description": "The suggestion for the student.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "header",
            "description": "The motivation for the suggestion.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This contains info about a suggestion. The response is an empty object"
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/student/<student-id>/confirm": {
      "post": {
        "tags": [
          "student"
        ],
        "description": "Admin gives out final yes/maybe/no that decides if the student is suitable for OSOC or not.",
        "operationId": "confirm_student",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the student.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_application_id",
            "in": "header",
            "description": "The id of the student's job application.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reason",
            "in": "header",
            "description": "The reason for the suggestion.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reply",
            "in": "header",
            "description": "The suggestion for the student.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified student was confirmed to be added or not. The response is an empty object."
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/student/filter": {
      "get": {
        "tags": [
          "student"
        ],
        "description": "Filters the students with one or more filters.",
        "operationId": "filter_students",
        "parameters": [
          {
            "name": "osocYear",
            "in": "header",
            "description": "The year of the osoc edition.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alumniFilter",
            "in": "header",
            "description": "The alumni filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "coachFilter",
            "in": "header",
            "description": "The student-coach filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailFilter",
            "in": "header",
            "description": "The email filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailSort",
            "in": "header",
            "description": "Sorting by email (asc or desc).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailStatusFilter",
            "in": "header",
            "description": "The email status filter.",
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "FAILED",
                "NONE",
                "SCHEDULED",
                "SENT"
              ]
            }
          },
          {
            "name": "firstNameFilter",
            "in": "header",
            "description": "The firstname filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstNameSort",
            "in": "header",
            "description": "Sorting by firstname (asc or desc).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastNameFilter",
            "in": "header",
            "description": "The lastname filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastNameSort",
            "in": "header",
            "description": "Sorting by lastname (asc or desc).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleFilter",
            "in": "header",
            "description": "The role filter.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "statusFilter",
            "in": "header",
            "description": "The status filter.",
            "schema": {
              "type": "string",
              "enum": [
                "MAYBE",
                "NO",
                "YES"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all filtered students.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllStudents"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/template": {
      "get": {
        "tags": [
          "template"
        ],
        "description": "Redirects towards GET /template/all.",
        "operationId": "template",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /template/all"
          }
        }
      },
      "post": {
        "tags": [
          "template"
        ],
        "description": "Creates a new template.",
        "operationId": "create_template",
        "parameters": [
          {
            "name": "content",
            "in": "header",
            "description": "The content of the template.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "header",
            "description": "The name of the template.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "header",
            "description": "The copy field of the template.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "header",
            "description": "The subject of the template.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains info about the newly created template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create_template"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/template/all": {
      "get": {
        "tags": [
          "template"
        ],
        "description": "Returns a list of all templates in the system.",
        "operationId": "all_templates",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all templates.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "owner": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/template/<template-id>": {
      "get": {
        "tags": [
          "template"
        ],
        "description": "Gets a single template with the given id.",
        "operationId": "get_template",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the template.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains info about this template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "post": {
        "tags": [
          "template"
        ],
        "description": "Attempts to modify a template.",
        "operationId": "modify_template",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the template.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "header",
            "description": "The copy field of the template.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "header",
            "description": "The content of the template.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "header",
            "description": "The name of the template.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "header",
            "description": "The subject of the template.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the new info of this template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Create_template"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "template"
        ],
        "description": "Attempts to delete a template.",
        "operationId": "delete_template",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the template.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified template was removed. The response is an empty object."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Redirects towards GET /user/all.",
        "operationId": "user",
        "responses": {
          "303": {
            "description": "http HTTP/2 303 See Location: /user/all"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Returns a list of all users in the system.",
        "operationId": "all_users",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains info about all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoginUser"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/user/request": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Creates a new user request.",
        "operationId": "create_user_request",
        "parameters": [
          {
            "name": "email",
            "in": "header",
            "description": "The email of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstname",
            "in": "header",
            "description": "The firstname of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pass",
            "in": "header",
            "description": "The password of the user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastname",
            "in": "header",
            "description": "The lastname of the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The id is the id of the new user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          }
        }
      }
    },
    "/user/request/<user-id>": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Attempts to accept a new user.",
        "operationId": "accept_user_request",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the new user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is_admin",
            "in": "header",
            "description": "True if the new user is an admin, else false.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_coach",
            "in": "header",
            "description": "True if the new user is a coach, else false.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data object contains the id and name of the new user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdName"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "description": "Attempts to delete a user request.",
        "operationId": "delete_user_request",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "description": "The id of the new user.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is_admin",
            "in": "header",
            "description": "True if the new user is an admin, else false.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_coach",
            "in": "header",
            "description": "True if the new user is a coach, else false.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified user request was denied. The response is an empty object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIdName"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/user/self": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Gets the current user.",
        "operationId": "get_current_user_request",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user gets his account information back.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUser"
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "description": "Attempts to modify the data of the current user.",
        "operationId": "modify_current_user_request",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "header",
            "description": "The name of the user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pass",
            "in": "header",
            "description": "The old and new password.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "newpass": {
                  "type": "string"
                },
                "oldpass": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user associated with the session key has been modified. The response contains either the old session key, or a new one if the password has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionkey": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "412": {
            "description": "The data you requested does not exist (yet)."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/user/filter": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Attempts to filter the users.",
        "operationId": "filter_users",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailFilter",
            "in": "header",
            "description": "The email filter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailSort",
            "in": "header",
            "description": "Sorting by email (asc or desc).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAdminFilter",
            "in": "header",
            "description": "True if the users are admins, else false.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iscoachFilter",
            "in": "header",
            "description": "True if the users are coaches, else false.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameFilter",
            "in": "header",
            "description": "The name filter.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameSort",
            "in": "header",
            "description": "Sorting by name (asc or desc).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "in": "header",
            "description": "The status filter.",
            "schema": {
              "type": "string",
              "enum": [
                "MAYBE",
                "FALSE",
                "TRUE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data list contains the info about the filtered students.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoginUser"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "This endpoint requires an ID. The ID you provided was invalid."
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "403": {
            "description": "Unauthorized request. You do not have sufficient rights to access this endpoint."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    },
    "/verify": {
      "get": {
        "tags": [
          "verify"
        ],
        "description": "Attempts to verify if the session key is valid.",
        "operationId": "verify",
        "parameters": [
          {
            "name": "sessionkey",
            "in": "header",
            "description": "Your current session key.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains the data of the verification.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Verify"
                    },
                    {
                      "$ref": "#/components/schemas/VerifyValid"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "One of the arguments is incorrect or not present."
          },
          "401": {
            "description": "The user has to log in first."
          },
          "423": {
            "description": "Your account was deactivated. Please contact the webmaster."
          },
          "424": {
            "description": "Your account hasn't been activated yet. Please try again later."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginUser": {
        "type": "object",
        "properties": {
          "login_user_id": {
            "type": "number"
          },
          "account_status": {
            "type": "string",
            "enum": [
              "ACTIVATED",
              "DISABLED",
              "PENDING"
            ]
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_coach": {
            "type": "boolean"
          },
          "person": {
            "type": "object",
            "properties": {
              "person_id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "github": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "LoginUser"
        }
      },
      "CoachUser": {
        "type": "object",
        "properties": {
          "activated": {
            "type": "string",
            "enum": [
              "ACTIVATED",
              "DISABLED",
              "PENDING"
            ]
          },
          "admin": {
            "type": "boolean"
          },
          "coach": {
            "type": "boolean"
          },
          "login_user_id": {
            "type": "number"
          },
          "person_data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "nullable": true
              },
              "github": {
                "type": "string",
                "nullable": true,
                "default": null
              },
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "LoginUser"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "account_status": {
            "type": "string",
            "enum": [
              "ACTIVATED",
              "PENDING",
              "DISABLED"
            ]
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_coach": {
            "type": "boolean"
          },
          "sessionkey": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Login"
        }
      },
      "ModifyLoginUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "ModifyLoginUser"
        }
      },
      "Followup": {
        "type": "object",
        "properties": {
          "application": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPLIED",
              "AWAITING_PROJECT",
              "APPROVED",
              "CONTRACT_CONFIRMED",
              "CONTRACT_DECLINED",
              "REJECTED"
            ]
          },
          "student": {
            "type": "number"
          }
        },
        "xml": {
          "name": "Followup"
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "osoc_id": {
            "type": "number"
          },
          "partner": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "positions": {
                  "type": "number"
                }
              }
            }
          },
          "start_date": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Project"
        }
      },
      "Project_coach": {
        "type": "object",
        "properties": {
          "project_user_id": {
            "type": "number"
          },
          "login_user": {
            "type": "object",
            "properties": {
              "is_admin": {
                "type": "boolean"
              },
              "is_coach": {
                "type": "boolean"
              },
              "login_user_id": {
                "type": "number"
              },
              "person": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "xml": {
          "name": "Project_coach"
        }
      },
      "Project_coaches": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Project_coach"
        }
      },
      "Project_Students_Coaches": {
        "type": "object",
        "properties": {
          "coaches": {
            "$ref": "#/components/schemas/Project_coaches"
          },
          "end_date": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "osoc_id": {
            "type": "number"
          },
          "partner": {
            "type": "string"
          },
          "positions": {
            "type": "number"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "positions": {
                  "type": "number"
                }
              }
            }
          },
          "start_date": {
            "type": "string"
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "student": {
                  "type": "object",
                  "properties": {
                    "student_id": {
                      "type": "number"
                    },
                    "person": {
                      "$ref": "#/components/schemas/Person"
                    },
                    "alumni": {
                      "type": "boolean"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "pronouns": {
                      "type": "string"
                    },
                    "phone_number": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Project_Students_Coaches"
        }
      },
      "Project_list": {
        "type": "array",
        "xml": {
          "name": "ProjectList"
        },
        "items": {
          "$ref": "#/components/schemas/Project_Students_Coaches"
        }
      },
      "All_projects": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Project_list"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "xml": {
          "name": "Allprojects"
        }
      },
      "Modify_project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "partner": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "osoc_id": {
            "type": "number"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "positions": {
                  "type": "number"
                }
              }
            }
          },
          "coaches": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "project_user_id": {
                  "type": "number"
                },
                "login_user": {
                  "type": "object",
                  "properties": {
                    "person": {
                      "$ref": "#/components/schemas/Person"
                    },
                    "is_coach": {
                      "type": "boolean"
                    },
                    "is_admin": {
                      "type": "boolean"
                    },
                    "login_user_id": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Modify_project"
        }
      },
      "Drafted_students_project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "students": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "APPROVED",
                    "CANCELLED",
                    "DRAFT",
                    "SENT",
                    "SIGNED",
                    "WAIT_APPROVAL"
                  ]
                },
                "student": {
                  "type": "object",
                  "properties": {
                    "student_id": {
                      "type": "number"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "person": {
                      "$ref": "#/components/schemas/Person"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "alumni": {
                      "type": "boolean"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "pronouns": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Drafted_students_project"
        }
      },
      "Draft_student_project": {
        "type": "object",
        "properties": {
          "drafted": {
            "type": "boolean"
          },
          "role": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Draft_student_project"
        }
      },
      "All_roles": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "role_id": {
                  "type": "number"
                }
              }
            }
          }
        },
        "xml": {
          "name": "All_roles"
        }
      },
      "Create_role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Create_role"
        }
      },
      "Student": {
        "type": "object",
        "properties": {
          "evaluation": {
            "type": "object",
            "properties": {
              "evaluations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "decision": {
                      "type": "string",
                      "enum": [
                        "MAYBE",
                        "NO",
                        "YES"
                      ]
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "is_final": {
                      "type": "boolean"
                    },
                    "motivation": {
                      "type": "string"
                    }
                  }
                }
              },
              "osoc": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "jobApplication": {
            "type": "object",
            "properties": {
              "applied_role": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppliedRole"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "created_at": {
                "type": "string",
                "example": "This is actually a date: 2022-03-14 23:10:00+01"
              },
              "edus": {
                "type": "array",
                "items": {
                  "type": "string",
                  "default": "Informatics"
                }
              },
              "edu_duration": {
                "type": "number"
              },
              "edu_institute": {
                "type": "string",
                "default": "Ghent university"
              },
              "edu_level": {
                "type": "string",
                "default": "Third bachelors degree"
              },
              "edu_year": {
                "type": "string",
                "default": "3"
              },
              "email_status": {
                "type": "string",
                "default": "NONE",
                "enum": [
                  "DRAFT",
                  "FAILED",
                  "NONE",
                  "SCHEDULED",
                  "SENT"
                ]
              },
              "fun_fact": {
                "type": "string",
                "default": "I like basketball."
              },
              "job_application_id": {
                "type": "number"
              },
              "job_application_skill": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobApplicationSkill"
                }
              },
              "osoc_id": {
                "type": "number"
              },
              "responsibilities": {
                "type": "string",
                "default": "I play basketball from 5pm until 7pm."
              },
              "student_coach": {
                "type": "boolean"
              },
              "student_id": {
                "type": "number"
              },
              "student_volunteer_info": {
                "type": "string",
                "default": "Yes, I can work with a student employment agreement in Belgium."
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "student": {
            "type": "object",
            "properties": {
              "alumni": {
                "type": "boolean"
              },
              "gender": {
                "type": "string"
              },
              "nickname": {
                "type": "string",
                "nullable": true
              },
              "person": {
                "$ref": "#/components/schemas/Person"
              },
              "person_id": {
                "type": "number"
              },
              "phone_number": {
                "type": "string"
              },
              "pronouns": {
                "type": "string",
                "nullable": true
              },
              "student_id": {
                "type": "number"
              }
            }
          }
        },
        "xml": {
          "name": "Student"
        }
      },
      "StudentInfo": {
        "type": "object",
        "properties": {
          "evaluation": {
            "type": "object",
            "properties": {
              "evaluations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "evaluation_id": {
                      "type": "number"
                    },
                    "decision": {
                      "type": "string",
                      "enum": [
                        "MAYBE",
                        "NO",
                        "Yes"
                      ]
                    },
                    "is_final": {
                      "type": "boolean"
                    },
                    "motivation": {
                      "type": "string"
                    }
                  }
                }
              },
              "osoc": {
                "type": "number"
              }
            }
          },
          "evaluations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "evaluation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "login_user": {
                        "type": "object",
                        "properties": {
                          "login_user_id": {
                            "type": "number"
                          },
                          "person": {
                            "$ref": "#/components/schemas/Person"
                          }
                        }
                      }
                    }
                  }
                },
                "osoc": {
                  "type": "number"
                }
              }
            }
          },
          "jobApplication": {
            "type": "object",
            "properties": {
              "applied_role": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppliedRole"
                }
              },
              "attachment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Attachment"
                }
              },
              "created_at": {
                "type": "string",
                "example": "This is actually a date: 2022-03-14 23:10:00+01"
              },
              "edus": {
                "type": "array",
                "items": {
                  "type": "string",
                  "default": "Informatics"
                }
              },
              "edu_duration": {
                "type": "number"
              },
              "edu_institute": {
                "type": "string",
                "default": "Ghent university"
              },
              "edu_level": {
                "type": "string",
                "default": "Third bachelors degree"
              },
              "edu_year": {
                "type": "string",
                "default": "3"
              },
              "email_status": {
                "type": "string",
                "default": "APPLIED",
                "enum": [
                  "APPLIED",
                  "AWAITITING_PROJECT",
                  "APPROVED",
                  "CONTRACT_CONFIRMED",
                  "CONTRACT_DECLINED",
                  "REJECTED"
                ]
              },
              "fun_fact": {
                "type": "string",
                "default": "I like basketball."
              },
              "job_application_id": {
                "type": "number"
              },
              "job_application_skill": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobApplicationSkill"
                }
              },
              "osoc_id": {
                "type": "number"
              },
              "responsibilities": {
                "type": "string",
                "default": "I play basketball from 5pm until 7pm."
              },
              "student_coach": {
                "type": "boolean"
              },
              "student_id": {
                "type": "number"
              },
              "student_volunteer_info": {
                "type": "string",
                "default": "Yes, I can work with a student employment agreement in Belgium."
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "student": {
            "type": "object",
            "properties": {
              "alumni": {
                "type": "boolean"
              },
              "gender": {
                "type": "string"
              },
              "nickname": {
                "type": "string",
                "nullable": true
              },
              "person": {
                "$ref": "#/components/schemas/Person"
              },
              "person_id": {
                "type": "number"
              },
              "phone_number": {
                "type": "string"
              },
              "pronouns": {
                "type": "string",
                "nullable": true
              },
              "student_id": {
                "type": "number"
              }
            }
          }
        },
        "xml": {
          "name": "StudentInfo"
        }
      },
      "AllStudents": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentInfo"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "xml": {
          "name": "AllStudents"
        }
      },
      "AllStudentSuggestions": {
        "type": "object",
        "properties": {
          "evaluation": {
            "type": "object",
            "properties": {
              "evaluations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "login_user": {
                      "type": "object",
                      "properties": {
                        "login_user_id": {
                          "type": "number"
                        },
                        "person": {
                          "$ref": "#/components/schemas/Person"
                        }
                      }
                    }
                  }
                }
              },
              "osoc": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "AllStudentSuggestions"
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "github": {
            "type": "string",
            "nullable": true
          },
          "github_id": {
            "type": "string",
            "nullable": true
          },
          "person_id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Person"
        }
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "attachment_id": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "job_application_id": {
            "type": "number"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CV_URL",
                "FILE_URL",
                "MOTIVATION_STRING",
                "MOTIVATION_URL",
                "PORTFOLIO_URL"
              ]
            }
          }
        },
        "xml": {
          "name": "Attachment"
        }
      },
      "JobApplicationSkill": {
        "type": "object",
        "properties": {
          "is_best": {
            "type": "boolean"
          },
          "is_preferred": {
            "type": "boolean"
          },
          "job_application_id": {
            "type": "number"
          },
          "job_application_skill_id": {
            "type": "number"
          },
          "language_id": {
            "type": "number"
          },
          "level": {
            "type": "number"
          },
          "skill": {
            "type": "string"
          }
        },
        "xml": {
          "name": "JobApplicationSkill"
        }
      },
      "AppliedRole": {
        "type": "object",
        "properties": {
          "applied_role_id": {
            "type": "number"
          },
          "job_application_id": {
            "type": "number"
          },
          "role_id": {
            "type": "number"
          }
        },
        "xml": {
          "name": "JobApplicationSkill"
        }
      },
      "Template": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "number"
          }
        },
        "xml": {
          "name": "Template"
        }
      },
      "Create_template": {
        "type": "object",
        "properties": {
          "cc": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "number"
          },
          "subject": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Create_template"
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "sessionKey": {
            "type": "string"
          }
        },
        "xml": {
          "name": "UserId"
        }
      },
      "UserIdName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "UserIdName"
        }
      },
      "Verify": {
        "required": [
          "valid"
        ],
        "type": "object",
        "properties": {
          "account_status": {
            "type": "string",
            "enum": [
              "ACTIVATED",
              "DISABLED",
              "PENDING"
            ]
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_coach": {
            "type": "boolean"
          },
          "valid": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "Verify"
        }
      },
      "VerifyValid": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "count": {
            "type": "number"
          }
        }
      }
    }
  }
}