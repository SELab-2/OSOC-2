# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: BackendCI
on:
  # Run on every open pull request, default types are [opened, edited, reopened]
  pull_request:

  # Should run all tests and upload the codecoverage on main
  push:
    branches: [main]
  
jobs:
  ci:
    runs-on: ubuntu-latest
    
    services:
     postgres: # this is for the integration testing of the orm functions
       image: postgres:14.2
       env:
        POSTGRES_USER: prisma
        POSTGRES_PASSWORD: prisma
        POSTGRES_DB: tests
       ports:
        - 5433:5432
       options:
         --health-cmd pg_isready
         --health-interval 10s
         --health-timeout 5s
         --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Create Prisma Env File
      run: |
        touch backend/prisma/.env
        echo DATABASE_URL="postgresql://osoc2:password@db:5432/osoc2?connect_timeout=30&pool_timeout=30" >> backend/prisma/.env
        cat backend/prisma/.env
    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: 17.x

    - run: npm install
      working-directory: backend

    # push the db scheme to the db container
    - name: Push schema to docker file
      run: npx dotenv -e prisma/.env.test -- npx prisma db push
      working-directory: backend

    - name: Coverage Report
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        working-directory: backend
        skip-step: install
        annotations: all
